package screen;

import exception.JagacyException;

public class CodePageC extends CodePage {
    private static final char[] doa = new char[] {
        '\000', '\001', '\002', '\003', '?', '\t', '?', '', '?', '?',
                '?', '\013', '\f', '\r', '\016', '\017', '\020', '\021', '\022', '\023',
                '?', '\n', '\b', '?', '\030', '\031', '?', '?', '\034', '\035',
                '\036', '\037', '?', '?', '?', '?', '?', '\n', '\027', '\033',
                '?', '?', '?', '?', '?', '\005', '\006', '\007', '?', '?',
                '\026', '?', '?', '?', '?', '\004', '?', '?', '?', '?',
                '\024', '\025', '?', '\032', ' ', '�', '�', '�', '�', '�',
                '�', '�', '�', '�', '�', '.', '<', '(', '+', '|',
                '&', '�', '�', '�', '�', '�', '�', '�', '�', '�',
                '!', '$', '*', ')', ';', '�', '-', '/', '�', '�',
                '�', '�', '�', '�', '�', '�', '�', ',', '%', '_',
                '>', '?', '�', '�', '�', '�', '�', '�', '�', '�',
                '�', '`', ':', '#', '@', '\'', '=', '"', '�', 'a',
                'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', '�', '�',
                '�', '�', '�', '�', '�', 'j', 'k', 'l', 'm', 'n',
                'o', 'p', 'q', 'r', '�', '�', '�', '�', '�', '�',
                '�', '~', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
                '�', '�', '�', '�', '�', '�', '^', '�', '�', '�',
                '�', '�', '�', '�', '�', '�', '[', ']', '�', '�',
                '�', '�', '{', 'A', 'B', 'C', 'D', 'E', 'F', 'G',
                'H', 'I', '�', '�', '�', '�', '�', '�', '}', 'J',
                'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', '�', '�',
                '�', '�', '�', '�', '\\', '�', 'S', 'T', 'U', 'V',
                'W', 'X', 'Y', 'Z', '�', '�', '�', '�', '�', '�',
                '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                '�', '�', '�', '�', '�', '?' };

    private static final byte[] ifa = new byte[] {
        0, 1, 2, 3, 55, 45, 46, 47, 22, 5,
                21, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                60, 61, 50, 38, 24, 25, 63, 39, 28, 29,
                30, 31, 64, 90, Byte.MAX_VALUE, 123, 91, 108, 80, 125,
                77, 93, 92, 78, 107, 96, 75, 97, -16, -15,
                -14, -13, -12, -11, -10, -9, -8, -7, 122, 94,
                76, 126, 110, 111, 124, -63, -62, -61, -60, -59,
                -58, -57, -56, -55, -47, -46, -45, -44, -43, -42,
                -41, -40, -39, -30, -29, -28, -27, -26, -25, -24,
                -23, -70, -32, -69, -80, 109, 121, -127, -126, -125,
                -124, -123, -122, -121, -120, -119, -111, -110, -109, -108,
                -107, -106, -105, -104, -103, -94, -93, -92, -91, -90,
                -89, -88, -87, -64, 79, -48, -95, 7, 32, 33,
                34, 35, 36, 21, 6, 23, 40, 41, 42, 43,
                44, 9, 10, 27, 48, 49, 26, 51, 52, 53,
                54, 8, 56, 57, 58, 59, 4, 20, 62, -1,
                65, -86, 74, -79, -97, -78, 106, -75, -67, -76,
                -102, -118, 95, -54, -81, -68, -112, -113, -22, -6,
                -66, -96, -74, -77, -99, -38, -101, -117, -73, -72,
                -71, -85, 100, 101, 98, 102, 99, 103, -98, 104,
                116, 113, 114, 115, 120, 117, 118, 119, -84, 105,
                -19, -18, -21, -17, -20, -65, Byte.MIN_VALUE, -3, -2, -5,
                -4, -83, -82, 89, 68, 69, 66, 70, 67, 71,
                -100, 72, 84, 81, 82, 83, 88, 85, 86, 87,
                -116, 73, -51, -50, -53, -49, -52, -31, 112, -35,
                -34, -37, -36, -115, -114, -33 };

    CodePageC() throws JagacyException { super("CP037"); }

    public char a(byte paramByte) throws JagacyException { return doa[paramByte & 0xFF]; }

    public char[] a(byte[] paramArrayOfbyte) throws JagacyException {
        char[] arrayOfChar = new char[paramArrayOfbyte.length];
        for (byte b = 0; b < paramArrayOfbyte.length; b++)
            arrayOfChar[b] = a(paramArrayOfbyte[b]);
        return arrayOfChar;
    }

    public byte[] a(String paramString) throws JagacyException {
        char[] arrayOfChar = paramString.toCharArray();
        byte[] arrayOfByte = new byte[arrayOfChar.length];
        byte b = 0;
        int i = arrayOfChar.length;
        while (b < i) {
            if (arrayOfChar[b] > '�')
                throw new JagacyException(8, "2 byte unicode for internal codepage=0x" + Integer.toHexString(arrayOfChar[b]));
            arrayOfByte[b] = ifa[arrayOfChar[b] & 0xFF];
            b++;
        }
        return arrayOfByte;
    }
}
